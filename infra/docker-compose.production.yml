version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    container_name: foodgram-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../.env
    environment:
      - POSTGRES_DB=foodgram
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always

  backend:
    image: ${DOCKER_USERNAME}/foodgram-backend:latest
    container_name: foodgram-backend
    restart: always
    volumes:
      - static_value:/backend_static/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ../.env

  frontend:
    image: ${DOCKER_USERNAME}/foodgram-frontend:latest
    container_name: foodgram-frontend
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - ./frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.19.3
    container_name: foodgram-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_value:
  media_value: